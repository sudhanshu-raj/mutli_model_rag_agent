# Base image
FROM python:3.11-bookworm

# Set working directory
WORKDIR /app

# Install system dependencies (same as dev)
RUN apt-get update && apt-get install -y --no-install-recommends \
    ghostscript \
    tesseract-ocr \
    libgl1-mesa-glx \
    libglib2.0-0 \
    git \
    gcc \
    g++ \
    build-essential \
    default-libmysqlclient-dev \
    pkg-config \
    sqlite3 \
    poppler-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Optional: verify SQLite version
RUN sqlite3 --version

# Copy requirements and install
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir \
       git+https://github.com/openai/CLIP.git@dcba3cb2e2827b402d2701e7e1c7d9fed8a20ef1 \
       mysqlclient pymysql gunicorn

# Create necessary directories
RUN mkdir -p /app/media/files-metadata \
    /app/media/images \
    /app/media/chroma-data \
    /app/media/output \
    /app/uploaded_files \
    /app/logs

# Copy full source code
COPY . .

# Set environment variables
ENV PYTHONPATH=/app:/app/src:/app/src/flaskAPI
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 5000

# Change working directory to where the Flask app is located
WORKDIR /app/src/flaskAPI

# Use Gunicorn for production WSGI serving with the correct path
CMD ["gunicorn", "-b", "0.0.0.0:5000", "--timeout", "900", "index:app"]
